rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false
    }

    match /users/{userId} {
      allow read: if isOwner(userId)
    }

    // students & teachers can read tests, Q & A
    // only teacher can write to tests, Q & A
    match /tests/{document} {
      allow read: if isSignedIn();
      allow write: if isTeacher();

      match /questions/{question} {
        allow read: if isSignedIn();
        allow write: if isTeacher();
      }
      match /answers/{answer} {
        // TODO: dozvoliti citanje odgovora studentu koji je zavrsio test
        allow read: if isTeacher();
        allow write: if isTeacher();
      }
    }

    // students & teachers can read domains and domain problems
    // teacher can write domains and domain problems
    match /domains/{document=**} {
      allow read: if isSignedIn();
      allow write: if isTeacher();
    }

    // takes
    match /{path=**}/takes/{take} {
      allow read: if isTeacher() || (isStudent() && isOwner(request.resource.data.user.uid));
      allow write: if isStudent() && isOwner(request.resource.data.user.uid);
    }

    match /users/{user}/takes/{take}/questions/{question} {
      allow read: if (isStudent() && isOwner(user)) || isTeacher();
      allow write: if isStudent() && isOwner(user);
    }

    match /users/{user}/takes/{take}/myAnswers/{myAsnwer} {
      allow read: if (isStudent() && isOwner(user)) || isTeacher();
      allow write: if isStudent() && isOwner(user);
    }

    function isOwner(userId) { return request.auth.uid == userId }
    function isSignedIn() {return request.auth != null}
    function isStudent() { return getRole('student') }
    function isTeacher() { return getRole('teacher') }
    function getRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role
    }

    // TODO: FINISH
    // function isTakeFinished() {

    // }

    // function existingData() { return resource.data }
    // function incomingData() { return request.resource.data }
  }
}